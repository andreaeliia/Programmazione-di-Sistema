[ ATTENZIONE: questo è un testo codificato in UTF-8 ]

Creare nella propria home su hplinux3.unisalento.it una directory
denominata proprioaccount.esameSNP67 (es.franco.esameSNP67) e svolgere
l'esercizio in tale directory o, in alternativa, creare una directory
con lo stesso nome nella propria home macOS, svolgere gli esercizi in
tale directory e, alla fine della prova, trasferirla nella propria
home su hplinux3.unisalento.it.

La soluzione deve rispettare lo standard SUSv3 ed essere completa di
makefile. Anche nel caso in cui non sia possibile risolvere il
problema in accordo con lo standard, la soluzione deve comunque
funzionare su Linux e macOS. Nella directory si DEVE anche creare un
file di nome "LEGGIMI.txt" che descriva l'impostazione adottata per le
soluzioni oltre ad eventuali commenti e/o osservazioni. Si fa presente
che il contenuto di tale file permette spesso una migliore
comprensione della logica seguita nello svolgimento e, di conseguenza,
la sua presenza va a tutto vantaggio dell'esaminando.

Alla fine usare nel proprio account Linux la linea di comando:

cd; tar cvfz $USER.esameSNP67.tgz $USER.esameSNP67

[ ATTENZIONE: dare il comando qui sopra indicato nello shell eseguito
sulla macchina Linux, DOPO che la cartella proprioaccount.esameSNP67 è
stata trasferita sulla propria home su hplinux3.unisalento.it e NON
mentre è ancora nella propria home su macOS (se in essa si è
lavorato). Si raccomanda, per qualsiasi dubbio sullo svolgimento e la
consegna del compito, di fare riferimento alla pagina web: 
http://www.liis.it/mw/index.php/LiiS:Istruzioni ]

Esercizio

Un processo client ha due thread che cambiano di continuo a intervalli
di tempo casuali il valore di una variabile d'ambiente A, assegnandole
un numero intero casuale. 

Gestire la concorrenza delle operazioni svolte dalle thread e fare in
modo che un'altra thread comunichi via TCP a un server ogni valore
modificato della variabile d'ambiente A. Il server, a sua volta, dovrà
provedere ad aggiornare ad ogni ricezione il valore della sua variabile
d'ambiente A.

I due processi devono procedere fino a quando il client non sia
interrotto. Non appena ciò accade, anche il server deve essere
interrotto.

Per la sperimentazione usare server e client sulla stessa macchina.